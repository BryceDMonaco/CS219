


ARM Macro Assembler    Page 1 


    1 00000000         ;Simple Keil tools demonstration program
    2 00000000         ;Modified from J.R. Gibson (7/14/07)
    3 00000000         ;Modified by D. Egbert ver. 2.0 1/28/10
    4 00000000         ;
    5 00000000                 AREA             Assembly1, CODE, READONLY
    6 00000000                 EXPORT           __main
    7 00000000         __main
    8 00000000                 ENTRY
    9 00000000 E59F303C 
                       mystart LDR              r3,= 0x40001000 ;point to RAM l
                                                            ocation
   10 00000004         ;
   11 00000004         ;*******************************************************
                       *****************
   12 00000004         ; For other programs (projects) replace the code below w
                       ith new code.
   13 00000004         ; Leave the code outside the ******* lines as is for all
                        programs.
   14 00000004         ; begin initialize data
   15 00000004         
   16 00000004 E59F0038 
                       UNPACK  LDR              r0,= 0x40001000
   17 00000008 E59F1034        LDR              r1,= 0x40001000
   18 0000000C E59F2034        LDR              r2,= 0x40001001
   19 00000010 E59F3030        LDR              r3,= 0x40001001
   20 00000014         
   21 00000014 E5D00000        LDRB             r0, [r0]    ;Get the lower half
                                                             of the first value
                                                            
   22 00000018         
   23 00000018 E1A01421        LSR              r1, #8      ;shift r1 to the ri
                                                            ght 8 bits
   24 0000001C E5D11000        LDRB             r1, [r1]    ;Get the upper half
                                                             (which has been sh
                                                            ifted down) of the 
                                                            first value
   25 00000020         
   26 00000020 E5D22000        LDRB             r2, [r2]    ;Get the lower half
                                                             of the second valu
                                                            e
   27 00000024         
   28 00000024 E1A03423        LSR              r3, #8      ;Shift r3 to the ri
                                                            ght 8 bits
   29 00000028 E5D33000        LDRB             r3, [r3]    ;Get the value of t
                                                            he upper half
   30 0000002C         
   31 0000002C E59F8018        LDR              r8,= 0x40001004 ;Get the base s
                                                            torage address
   32 00000030         
   33 00000030 E5C81000        STRB             r1, [r8, #0] ;Store the higher 
                                                            order of the first 
                                                            value first
   34 00000034 E5C80001        STRB             r0, [r8, #1] ;Store the lower o
                                                            rder of the first v
                                                            alue at r8 with an 
                                                            offset of 1
   35 00000038 E5C83002        STRB             r3, [r8, #2] ;Store the higher 
                                                            order of the second
                                                             value at r8 with o



ARM Macro Assembler    Page 2 


                                                            ffset of 2
   36 0000003C E5C82003        STRB             r2, [r8, #3] ;Store the lower o
                                                            rder of the second 
                                                            value at r8 with an
                                                             offset of 3
   37 00000040         
   38 00000040         ;*******************************************************
                       *****************
   39 00000040         ;
   40 00000040         ; an infinite loop because the processor continues to fe
                       tch instructions
   41 00000040 EAFFFFFE 
                       stop    BAL              stop
   42 00000044                 END                          ;END directive to s
                                                            how nothing more in
                                                             file
              40001000 
              40001001 
              40001004 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\assembly2.d -o.\objects\assembly2.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_
v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 521" --list=.\listings\assembly2.lst Assembl
y2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Assembly1 00000000

Symbol: Assembly1
   Definitions
      At line 5 in file Assembly2.s
   Uses
      None
Comment: Assembly1 unused
UNPACK 00000004

Symbol: UNPACK
   Definitions
      At line 16 in file Assembly2.s
   Uses
      None
Comment: UNPACK unused
__main 00000000

Symbol: __main
   Definitions
      At line 7 in file Assembly2.s
   Uses
      At line 6 in file Assembly2.s
Comment: __main used once
mystart 00000000

Symbol: mystart
   Definitions
      At line 9 in file Assembly2.s
   Uses
      None
Comment: mystart unused
stop 00000040

Symbol: stop
   Definitions
      At line 41 in file Assembly2.s
   Uses
      At line 41 in file Assembly2.s
Comment: stop used once
5 symbols
339 symbols in table
