


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* STARTUP.S: Startup file for Blinky Example          
                                             */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2006 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/*                */
   12 00000000         ;/* Modified for Assembly only use D. Egbert ver 1.0 3/1
                       3/09        */
   13 00000000         ;/*                */
   14 00000000         ;/******************************************************
                       ***********************/
   15 00000000         
   16 00000000         
   17 00000000         ;/*
   18 00000000         ; *  The STARTUP.S code is executed after CPU Reset. Thi
                       s file may be 
   19 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   20 00000000         ; *  symbols are entered under Options - ASM - Define.
   21 00000000         ; *
   22 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   23 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   24 00000000         ; *  startup and interrupt vectors are remapped from:
   25 00000000         ; *     0x00000000  default setting (not remapped)
   26 00000000         ; *     0x40000000  when RAM_MODE is used
   27 00000000         ; *
   28 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   29 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   30 00000000         ; */
   31 00000000         
   32 00000000         
   33 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   34 00000000         
   35 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   36 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   37 00000000 00000012 



ARM Macro Assembler    Page 2 


                       Mode_IRQ
                               EQU              0x12
   38 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   39 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   40 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   41 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   42 00000000         
   43 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   44 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   45 00000000         
   46 00000000         
   47 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   48 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   49 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   50 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   51 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   52 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   53 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   54 00000000         ;// </h>
   55 00000000         
   56 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   57 00000000 00000008 
                       SVC_Stack_Size
                               EQU              0x00000008
   58 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   59 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   60 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   61 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   62 00000000         
   64 00000000 00000088 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   65 00000000         
   66 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3



ARM Macro Assembler    Page 3 


   67 00000000         
   68 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   69 00000400         __initial_sp
                               SPACE            ISR_Stack_Size
   70 00000488         
   71 00000488         Stack_Top
   72 00000488         
   73 00000488         
   74 00000488         ;// <h> Heap Configuration
   75 00000488         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   76 00000488         ;// </h>
   77 00000488         
   78 00000488 00000000 
                       Heap_Size
                               EQU              0x00000000
   79 00000488         
   80 00000488                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   81 00000000         __heap_base
   82 00000000         Heap_Mem
                               SPACE            Heap_Size
   83 00000000         __heap_limit
   84 00000000         
   85 00000000         
   86 00000000         ; VPBDIV definitions
   87 00000000 E01FC100 
                       VPBDIV  EQU              0xE01FC100  ; VPBDIV Address
   88 00000000         
   89 00000000         ;// <e> VPBDIV Setup
   90 00000000         ;// <i> Peripheral Bus Clock Rate
   91 00000000         ;//   <o1.0..1>   VPBDIV: VPB Clock
   92 00000000         ;//               <0=> VPB Clock = CPU Clock / 4
   93 00000000         ;//               <1=> VPB Clock = CPU Clock
   94 00000000         ;//               <2=> VPB Clock = CPU Clock / 2
   95 00000000         ;//   <o1.4..5>   XCLKDIV: XCLK Pin
   96 00000000         ;//               <0=> XCLK Pin = CPU Clock / 4
   97 00000000         ;//               <1=> XCLK Pin = CPU Clock
   98 00000000         ;//               <2=> XCLK Pin = CPU Clock / 2
   99 00000000         ;// </e>
  100 00000000 00000000 
                       VPBDIV_SETUP
                               EQU              0
  101 00000000 00000000 
                       VPBDIV_Val
                               EQU              0x00000000
  102 00000000         
  103 00000000         
  104 00000000         ; Phase Locked Loop (PLL) definitions
  105 00000000 E01FC080 
                       PLL_BASE
                               EQU              0xE01FC080  ; PLL Base Address
  106 00000000 00000000 
                       PLLCON_OFS
                               EQU              0x00        ; PLL Control Offse
                                                            t
  107 00000000 00000004 
                       PLLCFG_OFS
                               EQU              0x04        ; PLL Configuration



ARM Macro Assembler    Page 4 


                                                             Offset
  108 00000000 00000008 
                       PLLSTAT_OFS
                               EQU              0x08        ; PLL Status Offset
                                                            
  109 00000000 0000000C 
                       PLLFEED_OFS
                               EQU              0x0C        ; PLL Feed Offset
  110 00000000 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
  111 00000000 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
  112 00000000 0000001F 
                       PLLCFG_MSEL
                               EQU              (0x1F<<0)   ; PLL Multiplier
  113 00000000 00000060 
                       PLLCFG_PSEL
                               EQU              (0x03<<5)   ; PLL Divider
  114 00000000 00000400 
                       PLLSTAT_PLOCK
                               EQU              (1<<10)     ; PLL Lock Status
  115 00000000         
  116 00000000         ;// <e> PLL Setup
  117 00000000         ;//   <o1.0..4>   MSEL: PLL Multiplier Selection
  118 00000000         ;//               <1-32><#-1>
  119 00000000         ;//               <i> M Value
  120 00000000         ;//   <o1.5..6>   PSEL: PLL Divider Selection
  121 00000000         ;//               <0=> 1   <1=> 2   <2=> 4   <3=> 8
  122 00000000         ;//               <i> P Value
  123 00000000         ;// </e>
  124 00000000 00000001 
                       PLL_SETUP
                               EQU              1
  125 00000000 00000024 
                       PLLCFG_Val
                               EQU              0x00000024
  126 00000000         
  127 00000000         
  128 00000000         ; Memory Accelerator Module (MAM) definitions
  129 00000000 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  130 00000000 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  131 00000000 00000004 
                       MAMTIM_OFS
                               EQU              0x04        ; MAM Timing Offset
                                                            
  132 00000000         
  133 00000000         ;// <e> MAM Setup
  134 00000000         ;//   <o1.0..1>   MAM Control
  135 00000000         ;//               <0=> Disabled
  136 00000000         ;//               <1=> Partially Enabled
  137 00000000         ;//               <2=> Fully Enabled
  138 00000000         ;//               <i> Mode



ARM Macro Assembler    Page 5 


  139 00000000         ;//   <o2.0..2>   MAM Timing
  140 00000000         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3
  141 00000000         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  142 00000000         ;//               <i> Fetch Cycles
  143 00000000         ;// </e>
  144 00000000 00000001 
                       MAM_SETUP
                               EQU              1
  145 00000000 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  146 00000000 00000004 
                       MAMTIM_Val
                               EQU              0x00000004
  147 00000000         
  148 00000000         
  149 00000000         ; Area Definition and Entry Point
  150 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  151 00000000         
  152 00000000                 AREA             RESET, CODE, READONLY
  153 00000000                 ARM
  154 00000000         
  155 00000000         
  156 00000000         ; Exception Vectors
  157 00000000         ;  Mapped to Address 0.
  158 00000000         ;  Absolute addressing mode must be used.
  159 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  160 00000000         
  161 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  162 00000004 E59FF018        LDR              PC, Undef_Addr
  163 00000008 E59FF018        LDR              PC, SWI_Addr
  164 0000000C E59FF018        LDR              PC, PAbt_Addr
  165 00000010 E59FF018        LDR              PC, DAbt_Addr
  166 00000014 E1A00000        NOP                          ; Reserved Vector 
  167 00000018         ;               LDR     PC, IRQ_Addr
  168 00000018 E51FFFF0        LDR              PC, [PC, #-0x0FF0] ; Vector fro
                                                            m VicVectAddr
  169 0000001C E59FF018        LDR              PC, FIQ_Addr
  170 00000020         
  171 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  172 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  173 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  174 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  175 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler



ARM Macro Assembler    Page 6 


  176 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  177 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  178 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  179 00000040         
  180 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  181 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
  182 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  183 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  184 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  185 00000054 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  186 00000058         
  187 00000058         
  188 00000058         ; Reset Handler
  189 00000058         
  190 00000058                 EXPORT           Reset_Handler
  191 00000058         Reset_Handler
  192 00000058         
  193 00000058         
  194 00000058         ; Setup VPBDIV
  195 00000058                 IF               VPBDIV_SETUP <> 0
  199                          ENDIF
  200 00000058         
  201 00000058         
  202 00000058         ; Setup PLL
  203 00000058                 IF               PLL_SETUP <> 0
  204 00000058 E59F00A0        LDR              R0, =PLL_BASE
  205 0000005C E3A010AA        MOV              R1, #0xAA
  206 00000060 E3A02055        MOV              R2, #0x55
  207 00000064         
  208 00000064         ;  Configure and Enable PLL
  209 00000064 E3A03024        MOV              R3, #PLLCFG_Val
  210 00000068 E5803004        STR              R3, [R0, #PLLCFG_OFS]
  211 0000006C E3A03001        MOV              R3, #PLLCON_PLLE
  212 00000070 E5803000        STR              R3, [R0, #PLLCON_OFS]
  213 00000074 E580100C        STR              R1, [R0, #PLLFEED_OFS]
  214 00000078 E580200C        STR              R2, [R0, #PLLFEED_OFS]
  215 0000007C         
  216 0000007C         ;  Wait until PLL Locked
  217 0000007C E5903008 
                       PLL_Loop
                               LDR              R3, [R0, #PLLSTAT_OFS]
  218 00000080 E2133B01        ANDS             R3, R3, #PLLSTAT_PLOCK



ARM Macro Assembler    Page 7 


  219 00000084 0AFFFFFC        BEQ              PLL_Loop
  220 00000088         
  221 00000088         ;  Switch to PLL Clock
  222 00000088 E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
  223 0000008C E5803000        STR              R3, [R0, #PLLCON_OFS]
  224 00000090 E580100C        STR              R1, [R0, #PLLFEED_OFS]
  225 00000094 E580200C        STR              R2, [R0, #PLLFEED_OFS]
  226 00000098                 ENDIF                        ; PLL_SETUP
  227 00000098         
  228 00000098         
  229 00000098         ; Setup MAM
  230 00000098                 IF               MAM_SETUP <> 0
  231 00000098 E59F0064        LDR              R0, =MAM_BASE
  232 0000009C E3A01004        MOV              R1, #MAMTIM_Val
  233 000000A0 E5801004        STR              R1, [R0, #MAMTIM_OFS]
  234 000000A4 E3A01002        MOV              R1, #MAMCR_Val
  235 000000A8 E5801000        STR              R1, [R0, #MAMCR_OFS]
  236 000000AC                 ENDIF                        ; MAM_SETUP
  237 000000AC         
  238 000000AC         
  239 000000AC         ; Memory Mapping (when Interrupt Vectors are in RAM)
  240 000000AC E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
  241 000000AC                 IF               :DEF:REMAP
  249                          ENDIF
  250 000000AC         
  251 000000AC         
  252 000000AC         ; Initialise Interrupt System
  253 000000AC         ;  ...
  254 000000AC         
  255 000000AC         
  256 000000AC         ; Setup Stack for each mode
  257 000000AC         
  258 000000AC E59F0054        LDR              R0, =Stack_Top
  259 000000B0         
  260 000000B0         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  261 000000B0 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  262 000000B4 E1A0D000        MOV              SP, R0
  263 000000B8 E2400000        SUB              R0, R0, #UND_Stack_Size
  264 000000BC         
  265 000000BC         ;  Enter Abort Mode and set its Stack Pointer
  266 000000BC E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  267 000000C0 E1A0D000        MOV              SP, R0
  268 000000C4 E2400000        SUB              R0, R0, #ABT_Stack_Size
  269 000000C8         
  270 000000C8         ;  Enter FIQ Mode and set its Stack Pointer
  271 000000C8 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  272 000000CC E1A0D000        MOV              SP, R0
  273 000000D0 E2400000        SUB              R0, R0, #FIQ_Stack_Size
  274 000000D4         
  275 000000D4         ;  Enter IRQ Mode and set its Stack Pointer
  276 000000D4 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit



ARM Macro Assembler    Page 8 


  277 000000D8 E1A0D000        MOV              SP, R0
  278 000000DC E2400080        SUB              R0, R0, #IRQ_Stack_Size
  279 000000E0         
  280 000000E0         ;  Enter Supervisor Mode and set its Stack Pointer
  281 000000E0 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  282 000000E4 E1A0D000        MOV              SP, R0
  283 000000E8 E2400008        SUB              R0, R0, #SVC_Stack_Size
  284 000000EC         
  285 000000EC         ;  Enter User Mode and set its Stack Pointer
  286 000000EC E321F010        MSR              CPSR_c, #Mode_USR
  287 000000F0                 IF               :DEF:__MICROLIB
  292 000000F0         
  293 000000F0 E1A0D000        MOV              SP, R0
  294 000000F4 E24DAB01        SUB              SL, SP, #USR_Stack_Size
  295 000000F8         
  296 000000F8                 ENDIF
  297 000000F8         
  298 000000F8         
  299 000000F8         ; Enter the C code
  300 000000F8         
  301 000000F8                 IMPORT           __main
  302 000000F8 E59F000C        LDR              R0, =__main
  303 000000FC E12FFF10        BX               R0
  304 00000100         
  305 00000100                 END
              E01FC080 
              E01FC000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\startup.d -o.\objects\startup.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\A
RM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --pre
define="__UVISION_VERSION SETA 521" --list=.\listings\startup.lst Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 66 in file Startup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 68 in file Startup.s
   Uses
      None
Comment: Stack_Mem unused
Stack_Top 00000488

Symbol: Stack_Top
   Definitions
      At line 71 in file Startup.s
   Uses
      At line 258 in file Startup.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 69 in file Startup.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 80 in file Startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 82 in file Startup.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 81 in file Startup.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 83 in file Startup.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 175 in file Startup.s
   Uses
      At line 165 in file Startup.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 183 in file Startup.s
   Uses
      At line 175 in file Startup.s
      At line 183 in file Startup.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 178 in file Startup.s
   Uses
      At line 169 in file Startup.s
Comment: FIQ_Addr used once
FIQ_Handler 00000054

Symbol: FIQ_Handler
   Definitions
      At line 185 in file Startup.s
   Uses
      At line 178 in file Startup.s
      At line 185 in file Startup.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 177 in file Startup.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 184 in file Startup.s
   Uses
      At line 177 in file Startup.s
      At line 184 in file Startup.s

PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 174 in file Startup.s
   Uses
      At line 164 in file Startup.s
Comment: PAbt_Addr used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 182 in file Startup.s
   Uses
      At line 174 in file Startup.s
      At line 182 in file Startup.s

PLL_Loop 0000007C

Symbol: PLL_Loop
   Definitions
      At line 217 in file Startup.s
   Uses
      At line 219 in file Startup.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 152 in file Startup.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 171 in file Startup.s
   Uses
      At line 161 in file Startup.s
Comment: Reset_Addr used once
Reset_Handler 00000058

Symbol: Reset_Handler
   Definitions
      At line 191 in file Startup.s
   Uses
      At line 171 in file Startup.s
      At line 190 in file Startup.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 173 in file Startup.s
   Uses
      At line 163 in file Startup.s
Comment: SWI_Addr used once
SWI_Handler 00000044

Symbol: SWI_Handler
   Definitions
      At line 181 in file Startup.s
   Uses
      At line 173 in file Startup.s
      At line 181 in file Startup.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 172 in file Startup.s
   Uses
      At line 162 in file Startup.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 180 in file Startup.s
   Uses
      At line 172 in file Startup.s
      At line 180 in file Startup.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 161 in file Startup.s
   Uses
      None
Comment: Vectors unused
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 58 in file Startup.s
   Uses
      At line 64 in file Startup.s
      At line 268 in file Startup.s

FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 59 in file Startup.s
   Uses
      At line 64 in file Startup.s
      At line 273 in file Startup.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 44 in file Startup.s
   Uses
      At line 261 in file Startup.s
      At line 266 in file Startup.s
      At line 271 in file Startup.s
      At line 276 in file Startup.s
      At line 281 in file Startup.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 78 in file Startup.s
   Uses
      At line 82 in file Startup.s
Comment: Heap_Size used once
IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 60 in file Startup.s
   Uses
      At line 64 in file Startup.s
      At line 278 in file Startup.s

ISR_Stack_Size 00000088

Symbol: ISR_Stack_Size
   Definitions
      At line 64 in file Startup.s
   Uses
      At line 69 in file Startup.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 43 in file Startup.s
   Uses
      At line 261 in file Startup.s
      At line 266 in file Startup.s
      At line 271 in file Startup.s
      At line 276 in file Startup.s
      At line 281 in file Startup.s

MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 130 in file Startup.s
   Uses
      At line 235 in file Startup.s
Comment: MAMCR_OFS used once
MAMCR_Val 00000002

Symbol: MAMCR_Val
   Definitions
      At line 145 in file Startup.s
   Uses
      At line 234 in file Startup.s
Comment: MAMCR_Val used once
MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 131 in file Startup.s
   Uses
      At line 233 in file Startup.s
Comment: MAMTIM_OFS used once
MAMTIM_Val 00000004

Symbol: MAMTIM_Val
   Definitions
      At line 146 in file Startup.s
   Uses
      At line 232 in file Startup.s
Comment: MAMTIM_Val used once
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 129 in file Startup.s
   Uses
      At line 231 in file Startup.s
Comment: MAM_BASE used once
MAM_SETUP 00000001

Symbol: MAM_SETUP
   Definitions
      At line 144 in file Startup.s
   Uses
      At line 230 in file Startup.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 240 in file Startup.s
   Uses
      None
Comment: MEMMAP unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 39 in file Startup.s
   Uses
      At line 266 in file Startup.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 36 in file Startup.s
   Uses
      At line 271 in file Startup.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 37 in file Startup.s
   Uses
      At line 276 in file Startup.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 38 in file Startup.s
   Uses
      At line 281 in file Startup.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 41 in file Startup.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 40 in file Startup.s
   Uses
      At line 261 in file Startup.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 35 in file Startup.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 286 in file Startup.s
Comment: Mode_USR used once
PLLCFG_MSEL 0000001F

Symbol: PLLCFG_MSEL
   Definitions
      At line 112 in file Startup.s
   Uses
      None
Comment: PLLCFG_MSEL unused
PLLCFG_OFS 00000004

Symbol: PLLCFG_OFS
   Definitions
      At line 107 in file Startup.s
   Uses
      At line 210 in file Startup.s
Comment: PLLCFG_OFS used once
PLLCFG_PSEL 00000060

Symbol: PLLCFG_PSEL
   Definitions
      At line 113 in file Startup.s
   Uses
      None
Comment: PLLCFG_PSEL unused
PLLCFG_Val 00000024

Symbol: PLLCFG_Val
   Definitions
      At line 125 in file Startup.s
   Uses
      At line 209 in file Startup.s
Comment: PLLCFG_Val used once
PLLCON_OFS 00000000

Symbol: PLLCON_OFS
   Definitions
      At line 106 in file Startup.s
   Uses
      At line 212 in file Startup.s
      At line 223 in file Startup.s

PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 111 in file Startup.s
   Uses
      At line 222 in file Startup.s
Comment: PLLCON_PLLC used once
PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 110 in file Startup.s
   Uses
      At line 211 in file Startup.s
      At line 222 in file Startup.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols


PLLFEED_OFS 0000000C

Symbol: PLLFEED_OFS
   Definitions
      At line 109 in file Startup.s
   Uses
      At line 213 in file Startup.s
      At line 214 in file Startup.s
      At line 224 in file Startup.s
      At line 225 in file Startup.s

PLLSTAT_OFS 00000008

Symbol: PLLSTAT_OFS
   Definitions
      At line 108 in file Startup.s
   Uses
      At line 217 in file Startup.s
Comment: PLLSTAT_OFS used once
PLLSTAT_PLOCK 00000400

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 114 in file Startup.s
   Uses
      At line 218 in file Startup.s
Comment: PLLSTAT_PLOCK used once
PLL_BASE E01FC080

Symbol: PLL_BASE
   Definitions
      At line 105 in file Startup.s
   Uses
      At line 204 in file Startup.s
Comment: PLL_BASE used once
PLL_SETUP 00000001

Symbol: PLL_SETUP
   Definitions
      At line 124 in file Startup.s
   Uses
      At line 203 in file Startup.s
Comment: PLL_SETUP used once
SVC_Stack_Size 00000008

Symbol: SVC_Stack_Size
   Definitions
      At line 57 in file Startup.s
   Uses
      At line 64 in file Startup.s
      At line 283 in file Startup.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 56 in file Startup.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      At line 64 in file Startup.s
      At line 263 in file Startup.s

USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 61 in file Startup.s
   Uses
      At line 68 in file Startup.s
      At line 294 in file Startup.s

VPBDIV E01FC100

Symbol: VPBDIV
   Definitions
      At line 87 in file Startup.s
   Uses
      None
Comment: VPBDIV unused
VPBDIV_SETUP 00000000

Symbol: VPBDIV_SETUP
   Definitions
      At line 100 in file Startup.s
   Uses
      At line 195 in file Startup.s
Comment: VPBDIV_SETUP used once
VPBDIV_Val 00000000

Symbol: VPBDIV_Val
   Definitions
      At line 101 in file Startup.s
   Uses
      None
Comment: VPBDIV_Val unused
39 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 301 in file Startup.s
   Uses
      At line 302 in file Startup.s
Comment: __main used once
1 symbol
403 symbols in table
