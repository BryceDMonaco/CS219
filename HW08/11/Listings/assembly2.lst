


ARM Macro Assembler    Page 1 


    1 00000000         ;Simple Keil tools demonstration program
    2 00000000         ;Modified from J.R. Gibson (7/14/07)
    3 00000000         ;Modified by D. Egbert ver. 2.0 1/28/10
    4 00000000         ;
    5 00000000                 AREA             Assembly1, CODE, READONLY
    6 00000000                 EXPORT           __main
    7 00000000         __main
    8 00000000                 ENTRY
    9 00000000 E59F3038 
                       mystart LDR              r3,= 0x40001000 ;point to RAM l
                                                            ocation
   10 00000004         ;
   11 00000004         ;*******************************************************
                       *****************
   12 00000004         ; For other programs (projects) replace the code below w
                       ith new code.
   13 00000004         ; Leave the code outside the ******* lines as is for all
                        programs.
   14 00000004         ; begin initialize data
   15 00000004         
   16 00000004         ;I am assuming that r0 already has the address sent to i
                       t, no idea what it means to pass the address from a subr
                       outine, sorry
   17 00000004         
   18 00000004 E3A01000        LDR              r1,= 0      ;Set the offset to 
                                                            0
   19 00000008         
   20 00000008 E7D02001 
                       LOOP    LDRB             r2, [r0, r1] ;Load the char at 
                                                            r0 with offset r1
   21 0000000C         
   22 0000000C E3520000        CMP              r2, #0      ;Compare to the nul
                                                            l char
   23 00000010 0A000009        BEQ              stop
   24 00000014         
   25 00000014 E3520030        CMP              r2, #48     ;48 is the integer 
                                                            of the char '0'
   26 00000018 CA000007        BGT              stop        ;If greater than 48
                                                             than the char is a
                                                             decimal higher tha
                                                            n zero
   27 0000001C 0A000000        BEQ              REPLACE
   28 00000020 1A000003        BNE              NEXT
   29 00000024         
   30 00000024 E3A05020 
                       REPLACE LDR              r5,= 32
   31 00000028 E7C05001        STRB             r5, [r0, r1] ;Replace the value
                                                             with 32 which is t
                                                            he decimal value of
                                                             a space char ' '
   32 0000002C E2811001        ADD              r1, r1, #1  ;Increment the offs
                                                            et
   33 00000030 EAFFFFF4        BAL              LOOP
   34 00000034         
   35 00000034 E2811001 
                       NEXT    ADD              r1, r1, #1  ;Increment the offs
                                                            et
   36 00000038 EAFFFFF2        BAL              LOOP
   37 0000003C         



ARM Macro Assembler    Page 2 


   38 0000003C         ;*******************************************************
                       *****************
   39 0000003C         ;
   40 0000003C         ; an infinite loop because the processor continues to fe
                       tch instructions
   41 0000003C EAFFFFFE 
                       stop    BAL              stop
   42 00000040                 END                          ;END directive to s
                                                            how nothing more in
                                                             file
              40001000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\assembly2.d -o.\objects\assembly2.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_
v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 521" --list=.\listings\assembly2.lst Assembl
y2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Assembly1 00000000

Symbol: Assembly1
   Definitions
      At line 5 in file Assembly2.s
   Uses
      None
Comment: Assembly1 unused
LOOP 00000008

Symbol: LOOP
   Definitions
      At line 20 in file Assembly2.s
   Uses
      At line 33 in file Assembly2.s
      At line 36 in file Assembly2.s

NEXT 00000034

Symbol: NEXT
   Definitions
      At line 35 in file Assembly2.s
   Uses
      At line 28 in file Assembly2.s
Comment: NEXT used once
REPLACE 00000024

Symbol: REPLACE
   Definitions
      At line 30 in file Assembly2.s
   Uses
      At line 27 in file Assembly2.s
Comment: REPLACE used once
__main 00000000

Symbol: __main
   Definitions
      At line 7 in file Assembly2.s
   Uses
      At line 6 in file Assembly2.s
Comment: __main used once
mystart 00000000

Symbol: mystart
   Definitions
      At line 9 in file Assembly2.s
   Uses
      None
Comment: mystart unused
stop 0000003C

Symbol: stop
   Definitions
      At line 41 in file Assembly2.s
   Uses
      At line 23 in file Assembly2.s
      At line 26 in file Assembly2.s
      At line 41 in file Assembly2.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

7 symbols
341 symbols in table
