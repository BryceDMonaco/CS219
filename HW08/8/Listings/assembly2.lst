


ARM Macro Assembler    Page 1 


    1 00000000         ;Simple Keil tools demonstration program
    2 00000000         ;Modified from J.R. Gibson (7/14/07)
    3 00000000         ;Modified by D. Egbert ver. 2.0 1/28/10
    4 00000000         ;
    5 00000000                 AREA             Assembly1, CODE, READONLY
    6 00000000                 EXPORT           __main
    7 00000000         __main
    8 00000000                 ENTRY
    9 00000000 E59F304C 
                       mystart LDR              r3,= 0x40001000 ;point to RAM l
                                                            ocation
   10 00000004         ;
   11 00000004         ;*******************************************************
                       *****************
   12 00000004         ; For other programs (projects) replace the code below w
                       ith new code.
   13 00000004         ; Leave the code outside the ******* lines as is for all
                        programs.
   14 00000004         ; begin initialize data
   15 00000004         
   16 00000004 E59F1048        LDR              r1,= 0x40001000 
                                                            ;The key address
   17 00000008 E5D11000        LDRB             r1, [r1]    ;Load the key value
                                                            
   18 0000000C         
   19 0000000C E59F2044        LDR              r2,= 0x40001010 ;The address of
                                                             the start of the s
                                                            tring
   20 00000010 E3A03000        LDR              r3,= 0      ;Set the incremento
                                                            r to 0
   21 00000014 E3A04000        LDR              r4,= 0      ;Set the count to 0
                                                            
   22 00000018         
   23 00000018 E7D27003 
                       LOOP1   LDRB             r7, [r2, r3] ;Load the value at
                                                             r2 with the offset
                                                             r3
   24 0000001C E3570000        CMP              r7, #0      ;Compare that value
                                                             to the null char
   25 00000020 0A000007        BEQ              STORE       ;If it is the null 
                                                            char then go to STO
                                                            RE
   26 00000024         
   27 00000024 E1570001        CMP              r7, r1      ;Compare that value
                                                             to the key
   28 00000028 0A000000        BEQ              COUNT       ;If it is the key g
                                                            o to COUNT
   29 0000002C 1A000002        BNE              NEXT        ;Else go to NEXT
   30 00000030         
   31 00000030 E2844001 
                       COUNT   ADD              r4, r4, #1  ;Increment the coun
                                                            t
   32 00000034 E2833001        ADD              r3, r3, #1  ;Increment the incr
                                                            ementor/offset
   33 00000038 EAFFFFF6        BAL              LOOP1       ;Restart the loop
   34 0000003C         
   35 0000003C E2833001 
                       NEXT    ADD              r3, r3, #1  ;Increment the incr
                                                            ementor/offset



ARM Macro Assembler    Page 2 


   36 00000040 EAFFFFF4        BAL              LOOP1       ;Restart the loop
   37 00000044         
   38 00000044 E59F2010 
                       STORE   LDR              r2,= 0x40001004 ;Load the count
                                                             address
   39 00000048 E5C24000        STRB             r4, [r2]    ;Store the count
   40 0000004C EAFFFFFF        BAL              stop
   41 00000050         
   42 00000050         
   43 00000050         ;*******************************************************
                       *****************
   44 00000050         ;
   45 00000050         ; an infinite loop because the processor continues to fe
                       tch instructions
   46 00000050 EAFFFFFE 
                       stop    BAL              stop
   47 00000054                 END                          ;END directive to s
                                                            how nothing more in
                                                             file
              40001000 
              40001010 
              40001004 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\assembly2.d -o.\objects\assembly2.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_
v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 521" --list=.\listings\assembly2.lst Assembl
y2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Assembly1 00000000

Symbol: Assembly1
   Definitions
      At line 5 in file Assembly2.s
   Uses
      None
Comment: Assembly1 unused
COUNT 00000030

Symbol: COUNT
   Definitions
      At line 31 in file Assembly2.s
   Uses
      At line 28 in file Assembly2.s
Comment: COUNT used once
LOOP1 00000018

Symbol: LOOP1
   Definitions
      At line 23 in file Assembly2.s
   Uses
      At line 33 in file Assembly2.s
      At line 36 in file Assembly2.s

NEXT 0000003C

Symbol: NEXT
   Definitions
      At line 35 in file Assembly2.s
   Uses
      At line 29 in file Assembly2.s
Comment: NEXT used once
STORE 00000044

Symbol: STORE
   Definitions
      At line 38 in file Assembly2.s
   Uses
      At line 25 in file Assembly2.s
Comment: STORE used once
__main 00000000

Symbol: __main
   Definitions
      At line 7 in file Assembly2.s
   Uses
      At line 6 in file Assembly2.s
Comment: __main used once
mystart 00000000

Symbol: mystart
   Definitions
      At line 9 in file Assembly2.s
   Uses
      None
Comment: mystart unused
stop 00000050




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: stop
   Definitions
      At line 46 in file Assembly2.s
   Uses
      At line 40 in file Assembly2.s
      At line 46 in file Assembly2.s

8 symbols
342 symbols in table
